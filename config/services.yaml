# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    position_stack_api_key: '%env(POSITION_STACK_API_KEY)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
    # add more service definitions when explicit configuration is needed
    App\Service\GeocodingService:
        public: true
        arguments:
            - "@position.stack.client"
            - '@App\Service\RedisCacheService'
            - '%env(POSITION_STACK_API_KEY)%'
    App\Provider\Weather\OpenWeatherProvider:
        public: true
        arguments:
            - "@open.weather.client"
            - '@App\Service\RedisCacheService'
            - '%env(OPENWEATHER_API_KEY)%'
    _instanceof:
        App\Contracts\WeatherProviderInterface:
            tags: ['app.weather.provider']
    App\Service\WeatherForecastService:
        arguments:
            $weatherProviders: !tagged_iterator app.weather.provider
    # please note that last definitions always *replace* previous ones
